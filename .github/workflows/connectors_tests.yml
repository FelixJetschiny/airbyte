name: Connectors Tests

concurrency:
  # This is the name of the concurrency group. It is used to prevent concurrent runs of the same workflow.
  #
  # - github.head_ref is only defined on PR runs, it makes sure that the concurrency group is unique for pull requests
  #  ensuring that only one run per pull request is active at a time.
  #
  # - github.run_id is defined on all runs, it makes sure that the concurrency group is unique for workflow dispatches.
  # This allows us to run multiple workflow dispatches in parallel.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      test-connectors-options:
        description: "Options to pass to the 'airbyte-ci connectors test' command"
        default: "--modified"
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  pr_changes:
    if: (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork != true)
    runs-on: ubuntu-24.04
    outputs:
      connectors: ${{ steps.changes.outputs.connectors }}
    permissions:
      statuses: write
    steps:
      - name: Checkout Airbyte
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v4
      - id: changes
        uses: dorny/paths-filter@v2
        with:
          # Note: expressions within a filter are OR'ed
          filters: |
            connectors:
              - 'docs/integrations/**/*'
              - 'airbyte-ci/**/*'
              - 'airbyte-integrations/connectors/**/*'
              - 'airbyte-cdk/java/**/*'
              - 'buildSrc/**/*'
      # The Connector CI Tests & Regression Test Results Reviewed and Approved are status checks emitted by airbyte-ci
      # We make them pass once we have determined that there are no changes to the connectors
      - name: "Skip Connectors CI tests"
        if: steps.changes.outputs.connectors != 'true' && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "success",
            "context": "Connectors CI tests",
            "target_url": "${{ github.event.workflow_run.html_url }}"
            }' \
      - name: "Skip Regression Test Results Reviewed and Approved"
        if: steps.changes.outputs.connectors != 'true' && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "success",
            "description": "[Skipped]",
            "context": "Regression Test Results Reviewed and Approved",
            "target_url": "${{ github.event.workflow_run.html_url }}"
            }' \

  pr_generate_connectors_matrix:
    needs: pr_changes
    if: needs.pr_changes.outputs.connectors == 'true'
    runs-on: ubuntu-24.04
    outputs:
      java_connectors_matrix: ${{ steps.generate_matrix.outputs.generate_java_connectors_matrix }}
      other_connectors_matrix: ${{ steps.generate_matrix.outputs.generate_other_connectors_matrix }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: List modified java connectors
        id: list_modified_java_connectors
        uses: ./.github/actions/run-airbyte-ci
        with:
          set_java_environment: false
          context: "pull_request"
          subcommand: "connectors --language=java --modified list --output=selected_connectors.json"
      - name: Generate java connectors matrix (1 connector per job)
        id: generate_java_connectors_matrix
        run: |
          matrix=$(jq -c -r '{include: [.[] | "--name=" + .] | to_entries | group_by(.key / 1 | floor) | map(map(.value) | {"connector_names": join(" ")})}' selected_connectors.json)
          echo "java_connectors_matrix=$matrix" >> $GITHUB_OUTPUT
      - name: List modified other connectors
        id: list_modified_other_connectors
        uses: ./.github/actions/run-airbyte-ci
        with:
          set_java_environment: false
          context: "pull_request"
          subcommand: "connectors --language=python  --language=manifest-only --modified  list --output=selected_connectors.json"
      - name: Generate other connectors matrix (10 connectors per job)
        id: generate_other_connectors_matrix
        run: |
          matrix=$(jq -c -r '{include: [.[] | "--name=" + .] | to_entries | group_by(.key / 10 | floor) | map(map(.value) | {"connector_names": join(" ")})}' selected_connectors.json)
          echo "other_connectors_matrix=$matrix" >> $GITHUB_OUTPUT
  pr_java_connectors_ci:
    needs: pr_generate_connectors_matrix
    name: Java Connectors CI [PULL REQUEST]
    runs-on: linux-20.04-large # Custom runner, defined in GitHub org settings
    strategy:
      matrix: ${{fromJson(needs.pr_generate_connectors_matrix.outputs.java_connectors_matrix)}}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: Check PAT rate limits
        run: |
          ./tools/bin/find_non_rate_limited_PAT \
            ${{ secrets.GH_PAT_MAINTENANCE_OSS }}
      - name: Fetch last commit id from remote branch
        id: fetch_last_commit_id_pr
        run: echo "commit_id=$(git ls-remote --heads origin refs/heads/${{ github.head_ref }} | cut -f 1)" >> $GITHUB_OUTPUT
      - name: Test connectors
        uses: ./.github/actions/run-airbyte-ci
        with:
          context: "pull_request"
          dagger_cloud_token: ${{ secrets.DAGGER_CLOUD_TOKEN_CACHE_3 }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcp_gsm_credentials: ${{ secrets.GCP_GSM_CREDENTIALS }}
          gcp_integration_tester_credentials: ${{ secrets.GCLOUD_INTEGRATION_TESTER }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          git_branch: ${{ github.head_ref }}
          git_revision: ${{ steps.fetch_last_commit_id_pr.outputs.commit_id }}
          github_token: ${{ env.PAT }}
          s3_build_cache_access_key_id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          s3_build_cache_secret_key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          # A connector test can't take more than 5 hours to run (5 * 60 * 60 = 18000 seconds)
          subcommand: "connectors --execute-timeout=18000 ${{ matrix.connector_names}} test"
          set_java_environment: true
  pr_other_connectors_ci:
    needs: pr_generate_connectors_matrix
    name: Other Connectors CI [PULL REQUEST]
    runs-on: linux-20.04-large # Custom runner, defined in GitHub org settings
    strategy:
      matrix: ${{fromJson(needs.pr_generate_connectors_matrix.outputs.other_connectors_matrix)}}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: Check PAT rate limits
        run: |
          ./tools/bin/find_non_rate_limited_PAT \
            ${{ secrets.GH_PAT_MAINTENANCE_OSS }}
      - name: Fetch last commit id from remote branch
        id: fetch_last_commit_id_pr
        run: echo "commit_id=$(git ls-remote --heads origin refs/heads/${{ github.head_ref }} | cut -f 1)" >> $GITHUB_OUTPUT
      - name: Test connectors
        uses: ./.github/actions/run-airbyte-ci
        with:
          context: "pull_request"
          dagger_cloud_token: ${{ secrets.DAGGER_CLOUD_TOKEN_CACHE_3 }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcp_gsm_credentials: ${{ secrets.GCP_GSM_CREDENTIALS }}
          gcp_integration_tester_credentials: ${{ secrets.GCLOUD_INTEGRATION_TESTER }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          git_branch: ${{ github.head_ref }}
          git_revision: ${{ steps.fetch_last_commit_id_pr.outputs.commit_id }}
          github_token: ${{ env.PAT }}
          s3_build_cache_access_key_id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          s3_build_cache_secret_key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          # A connector test can't take more than 5 hours to run (5 * 60 * 60 = 18000 seconds)
          subcommand: "connectors --execute-timeout=18000 ${{ matrix.connector_names}} test"
          set_java_environment: false

  workflow_dispatch_connectors_ci:
    if: github.event_name == 'workflow_dispatch'
    name: Connectors CI [WORKFLOW DISPATCH]
    runs-on: linux-20.04-large
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v4
      - name: Check PAT rate limits
        run: |
          ./tools/bin/find_non_rate_limited_PAT \
            ${{ secrets.GH_PAT_MAINTENANCE_OSS }}
      - name: Extract branch name [WORKFLOW DISPATCH]
        shell: bash
        if: github.event_name == 'workflow_dispatch'
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Fetch last commit id from remote branch [PULL REQUESTS]
        if: github.event_name == 'pull_request'
        id: fetch_last_commit_id_pr
        run: echo "commit_id=$(git ls-remote --heads origin refs/heads/${{ github.head_ref }} | cut -f 1)" >> $GITHUB_OUTPUT
      - name: Fetch last commit id from remote branch [WORKFLOW DISPATCH]
        if: github.event_name == 'workflow_dispatch'
        id: fetch_last_commit_id_wd
        run: echo "commit_id=$(git rev-parse origin/${{ steps.extract_branch.outputs.branch }})" >> $GITHUB_OUTPUT
      - name: Test connectors [WORKFLOW DISPATCH]
        if: github.event_name == 'workflow_dispatch'
        uses: ./.github/actions/run-airbyte-ci
        with:
          context: "manual"
          dagger_cloud_token: ${{ secrets.DAGGER_CLOUD_TOKEN_CACHE_3 }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          gcp_gsm_credentials: ${{ secrets.GCP_GSM_CREDENTIALS }}
          sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
          git_branch: ${{ steps.extract_branch.outputs.branch }}
          git_revision: ${{ steps.fetch_last_commit_id_wd.outputs.commit_id }}
          github_token: ${{ env.PAT }}
          s3_build_cache_access_key_id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          s3_build_cache_secret_key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          subcommand: "connectors ${{ github.event.inputs.test-connectors-options }} test"
          set_java_environment: true
